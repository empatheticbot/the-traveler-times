!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){class n extends Error{constructor(e,...t){const n="Occurred during call to the endpoint: "+e;super(n,...t),this.message=n,this.name="Bungie API failed"}}e.exports=n},function(e,t,n){const{BungieAPIHandler:r}=n(2);addEventListener("fetch",e=>e.respondWith(async function(e){if(console.log(e.method),"POST"!==e.method)return new Response(JSON.stringify({ok:!1,error:"This isn't implemented. I know GET is supposed to always be implemented, but it isn't. The world is an imperfect place."}),{status:501,"content-type":"application/json;charset=UTF-8"});const t=await e.json();console.log(t);const{definitions:n}=t;if(console.log(n),!n||0===n.length)return new Response(JSON.stringify({error:"`definition` property is required."}),{headers:{"content-type":"application/json;charset=UTF-8",status:400}});if(n.length>48)return new Response(JSON.stringify({error:"`defintion` property array has a length longer than 48, Cloudflare workers cannot process more than 50 requests and we need to make two additional requests internally."}),{headers:{"content-type":"application/json;charset=UTF-8",status:400}});const o=await BUNGIE_API.get("KEY"),i=await BUNGIE_API.get("OAUTH_TOKEN"),a=await BUNGIE_API.get("MEMBERSHIP_ID"),s=await BUNGIE_API.get("MEMBERSHIP_TYPE"),c=await BUNGIE_API.get("CHARACTER_ID"),u=new r({apiKey:o,oauthToken:i,membershipId:a,membershipType:s,characterId:c}),l=[];for(const e of n)l.push(u.callBungieNet({path:e.url}));try{return(await Promise.all(l)).forEach((e,t)=>{const r=n[t];DESTINY_2_DEFINITIONS.put(r.definition,JSON.stringify(e))}),new Response(JSON.stringify({ok:!0}),{headers:{"content-type":"application/json;charset=UTF-8",status:200}})}catch(e){return new Response(JSON.stringify({error:"The Bungie API request for 'definitionUrl' failed. "+e}),{headers:{"content-type":"application/json;charset=UTF-8",status:500}})}}(e.request)))},function(e,t,n){"use strict";n.r(t);class r{async getItemFromCache(e){const t=await DESTINY_HASH_CACHE.get(e);return t?(console.log("DESTINY_HASH_CACHE GET SUCCESS: "+e),JSON.parse(t)):(console.log("DESTINY_HASH_CACHE GET FAILURE: "+e),null)}setItemInCache(e,t,n){let r;console.log("DESTINY_HASH_CACHE PUT (Exp: "+n+"): "+e),n&&(r={expiration:new Date(n).getTime()/1e3});try{DESTINY_HASH_CACHE.put(e,JSON.stringify(t),r)}catch(t){console.log("DESTINY_HASH_CACHE PUT FAILED: "+e+" - "+t)}}}var o=n(0),i=n.n(o);class a{constructor({apiKey:e,oauthToken:t,membershipId:n,membershipType:r,characterId:o}){this.apiKey=e,this.oauthToken=t,this.membershipId=n,this.membershipType=r,this.characterId=o}addApiKeyToHeader(e){const t={...e};return t.headers={...t.headers,Authorization:"Bearer "+this.oauthToken,"X-API-Key":this.apiKey},t}async callApi(e){let t;console.log("CALL: "+e.path);try{t=await fetch("https://www.bungie.net/Platform"+e.path,this.addApiKeyToHeader(e))}catch(e){throw console.error("Failed to call bungie platform api "+e),e}if(401===t.status)console.error("Unauthorized from Bungie API. Check to make sure credentials are updated.");else if(!t.ok)throw new i.a(t.url,t.headers);return t.json()}async callBungieNet(e){let t=await fetch("https://www.bungie.net/"+e.path);if(!t.ok)throw new i.a(t.url,t.headers);return t.json()}async getManifest(){return(await this.callApi({path:"/Destiny2/Manifest/",method:"GET"})).Response}async getManifestDefinition(e,t){let n={path:`/Destiny2/Manifest/${e}/${t}/`,method:"GET"};return await this.callApi(n)}async getCompleteManifest(){const e=await this.getManifest();return this.callBungieNet({path:e.jsonWorldContentPaths.en})}async getDefinitionFromManifest(e){if("string"!=typeof e)throw new Error("Parameter `definition` is required and must be of type string.");const t=(await this.getManifest()).jsonWorldComponentContentPaths.en[e];if(!t)throw new Error(`Parameter 'definition' with value of ${e} does not exist in the Destiny 2 Manifest.`);return this.callBungieNet({path:t})}}n.d(t,"BungieAPICache",(function(){return r})),n.d(t,"BungieAPIError",(function(){return i.a})),n.d(t,"BungieAPIHandler",(function(){return a}))}]);