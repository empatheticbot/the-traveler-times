<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% if renderData.title %}
    <title>{{ renderData.title  + ' | ' + metadata.tite }}</title>
    {% elif title %}
    <title>{{ title + ' | ' + metadata.title }}</title>
    {% else %}
    <title>{{ metadata.title }}</title>
    {% endif %}
    <meta name = "keywords" content="Destiny 2, Meta, Crucible, Xur, Raid, Iron Banner, PVP, PVE" />
    <meta name="description" content="{{ renderData.description or description or metadata.description }}">
    <link rel="stylesheet" href="{{ '/index.css' | url }}">
    <link rel="alternate" href="{{ metadata.feed.path | url }}" type="application/atom+xml" title="{{ metadata.title }}">
    <link rel="stylesheet" type="text/css" href="https://cloud.typography.com/7441298/6558832/css/fonts.css" />
    {% block css %}
    {% endblock %}
  </head>
  <body class="{% if bodyClass %}{{ bodyClass }}{% endif %}">
    {% include 'header.njk' %}
    <main class="{% if templateClass %}{{ templateClass }}{% else %}main-container{% endif %}">
      <section class="page-main-content">
        {% block content %}
          {{ content | safe }}
        {% endblock %}
      </section>
      {# <hr class="line-separator-vertical--thick-light">
      <section class="page-side-content">
        {% block aside %}
          {{ aside | safe }}
        {% endblock %}
      </section> #}
    </main>
    {% include 'footer.njk' %}
    <script> {% include 'node_modules/moment/min/moment.min.js' %}</script>
    <script>
      var lastUpdatedElement = document.querySelector('#dynamic-last-updated');
      var buildDate = moment('{{ computed.buildDate }}');

      var weeklyResetElement = document.querySelector('#dynamic-weekly-reset-date');
      var weeklyResetDate = moment('{{ destinyData.weekly.resetDate }}');

      var seasonEndElement = document.querySelector('#dynamic-season-end-date');
      var seasonEndDate = moment('{{ destinyData.season.endDate }}');
      function updateRelativeDates() {
        console.log(buildDate.fromNow());
        lastUpdatedElement.innerText = `Updated ${buildDate.fromNow()}`;
        weeklyResetElement.innerText = `${weeklyResetDate.fromNow()}`;
        seasonEndElement.innerText = `${seasonEndDate.fromNow()}`;
      }
      setInterval(updateRelativeDates, 10000);
      updateRelativeDates();
    </script>
  </body>
</html>
